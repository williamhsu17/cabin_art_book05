<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>無標題文件</title>
<style type="text/css">
BODY {scrollbar-face-color:89BC40; 
      scrollbar-3dlight-color:E9EFE3;
      scrollbar-darkshadow-color:E9EFE3; 
      scrollbar-highlight-color:E9EFE3; 
      scrollbar-track-color:E9EFE3; 
      scrollbar-arrow-color:E9EFE3; 
      scrollbar-shadow-color:E9EFE3;}
.www {
	font-family: "新細明體", "Arial";
	font-size: 12px;
	line-height: 20px;
}
</style>
</head>

<body bgcolor="E9EFE3" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<h1 style="font-size:0px;">古典音樂欣賞器樂篇</h1>
<table width="95%" border="0" align="left" cellpadding="5" cellspacing="0" class="www">
  <tr>
    <td><img src="images/title4.gif" alt="標題" width="500" height="30"></td>
  </tr>
  <tr>
    <td><p><span class="www">　　古典音樂語法另一個重要的用語，就是聲音力度的運用，其使用的符號分別是“f”（“forte”）代表大聲、強音，“p” 
        （“piano”）代表小聲、弱音，且以比較級的方式標示聲音力度愈來愈強（f&lt;ff&lt;fff），或是愈來愈弱（p&gt;pp&gt;ppp）。這種聲音力度的運用往往是瞬間極端，例如在pp的樂句中突然出現ff的聲音，海頓「驚愕」交響曲的第二樂章就是一個最有名的曲例，其要的就是一種誇張的戲劇性效果。</span></p>
      <p><span class="www">　　“f” 與 “p” 的另一層用法在於改變聲音的色彩，莫札特的爸爸在其論述中提到，聲音音色的變化取法自繪畫上色澤明（light）暗（shade）對比的法則。因此我們時常會聽到當同一樂句重覆時，演奏者會以強弱對比的方式，來呈現樂句音色明暗之對比，再次的海頓「驚愕」交響曲的第二樂章主題樂段就是一個很好的例子。</span><span class="www"> 
         <!-- 點擊產生聲音區  -->
         <audio data-audio-id="2" class="myAudio"><source src="images/song02.mp3" type="audio/mpeg"> Your browser does not support the audio element.</audio>    
<img data-audio-id="2" class="sound_image" src="images/song02.png" alt="player" style=" height:25px; cursor: pointer;">
 </div> 
        <!-- end 點擊產生聲音區  -->  
        </span></p>
      </td>
  </tr>
</table>
<!--<div id="Layer1" style="position:absolute; left:174px; top:12px; width:191px; height:31px; z-index:1" class="www"><font color="#990000">（請聽音樂導聆CD 
  track 3、4 ）</font></div>-->
</body>
<script>
  document.addEventListener('DOMContentLoaded', function() {
      const images = document.querySelectorAll('.sound_image');
      
      images.forEach(img => {
          img.addEventListener('click', function() {
              const audioId = this.getAttribute('data-audio-id');
              const audioElement = document.querySelector(`audio[data-audio-id="${audioId}"]`);

              // Pause any other playing audios
              const allAudios = document.querySelectorAll('.myAudio');
              allAudios.forEach(audio => {
                  if (audio !== audioElement && !audio.paused) {
                      audio.pause();
                  }
              });

              // Toggle play/pause for the clicked audio
              if (audioElement.paused) {
                  audioElement.play();
              } else {
                  audioElement.pause();
              }
          });
      });
  });
</script>

</html>
